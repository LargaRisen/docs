import{_ as t,c as s,o as i,a4 as a}from"./chunks/framework.E4YCCYO0.js";const y=JSON.parse('{"title":"Tkinter","description":"","frontmatter":{},"headers":[],"relativePath":"backend/python/python_tkinter.md","filePath":"backend/python/python_tkinter.md","lastUpdated":null}'),e={name:"backend/python/python_tkinter.md"},n=a(`<h1 id="tkinter" tabindex="-1">Tkinter <a class="header-anchor" href="#tkinter" aria-label="Permalink to &quot;Tkinter&quot;">​</a></h1><blockquote><p>官方文档：<a href="https://docs.python.org/3/library/tkinter.html" target="_blank" rel="noreferrer">https://docs.python.org/3/library/tkinter.html</a></p><p>TkDocs：<a href="https://tkdocs.com/tutorial/index.html" target="_blank" rel="noreferrer">https://tkdocs.com/tutorial/index.html</a></p></blockquote><h2 id="基础知识" tabindex="-1">基础知识 <a class="header-anchor" href="#基础知识" aria-label="Permalink to &quot;基础知识&quot;">​</a></h2><p><code>tkinter</code> 是 <code>Tk</code> GUI 工具包的 Python 接口，<code>Tk</code> 是一个图形工具包，最初由 Tcl 语言开发。</p><p><strong>Tkinter 如何封装 Tcl/Tk</strong></p><p>当你的应用程序使用 Tkinter 的类和方法时，Tkinter 内部会组装表示 Tcl/Tk 命令的字符串，并在附加到应用程序的 Tk 实例的 Tcl 解释器中执行这些命令。</p><p><strong>如何知道控件（widget）的方法和选项</strong></p><p>你可以调用控件的 <code>configure()</code> 方法，它会返回一个字典，包含了组件的所有选项和值。使用 <code>keys()</code> 方法可以查看所有选项的名称。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">btn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ttk.Button(frm, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(btn.configure().keys())</span></span></code></pre></div><p>你可以用 <code>dir()</code> 函数来查看控件的所有方法。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(btn))</span></span></code></pre></div><p>大部分空间有共同的配置选项，如 <code>background</code>, <code>foreground</code>, <code>font</code>, <code>cursor</code> 等。你可以使用下面方法找到特定于某个控件的选项：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(btn)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(frm)))</span></span></code></pre></div><h2 id="tkinter-模块" tabindex="-1">Tkinter 模块 <a class="header-anchor" href="#tkinter-模块" aria-label="Permalink to &quot;Tkinter 模块&quot;">​</a></h2><p>我们常用到的主要有 tkinter 模块和 tkinter.ttk 模块。</p><p><code>ttk</code> 模块提供了一组更现代化的控件，它们看起来更好，功能也更强大，它在 TK 8.5 版本中引入。</p>`,16),p=[n];function h(r,o,k,l,d,c){return i(),s("div",null,p)}const E=t(e,[["render",h]]);export{y as __pageData,E as default};
