import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.E4YCCYO0.js";const F=JSON.parse('{"title":"Linux","description":"","frontmatter":{},"headers":[],"relativePath":"backend/linux.md","filePath":"backend/linux.md","lastUpdated":1716548927000}'),l={name:"backend/linux.md"},p=e(`<h1 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h1><h2 id="linux-命令" tabindex="-1">Linux 命令 <a class="header-anchor" href="#linux-命令" aria-label="Permalink to &quot;Linux 命令&quot;">​</a></h2><h3 id="基础命令" tabindex="-1">基础命令 <a class="header-anchor" href="#基础命令" aria-label="Permalink to &quot;基础命令&quot;">​</a></h3><ul><li><p>ls: 列出目录及文件名</p><p><code>-l</code> 长信息，可以查看权限等信息</p><p><code>-h</code> 人性化显示文件大小（可以结合上一条使用）</p><p><code>-a</code> 显示所有文件，包括隐藏文件</p><p><code>-F</code> 区分文件和目录，目录末尾加&#39;/&#39;，链接文件末尾加&#39;@&#39;</p><p><code>-R</code> 递归显示</p><p><code>-r</code> 反序显示</p><p><code>-t</code> 按时间排序</p><p><code>-S</code> 按文件大小排序</p><p><code>-d</code> 显示目录属性而非目录内容</p><p><code>-i</code> 显示文件的 inode 号</p><p><code>--color=auto</code> 颜色显示</p></li><li><p>cd：切换目录</p><p><code>-</code>：返回上一次所在的目录</p></li><li><p>pwd：显示目前的目录</p></li><li><p>touch：创建文件</p></li><li><p>mkdir：创建一个新的目录</p><p><code>-p</code> 可以创建多级目录</p><p><code>-m</code> 可以指定权限</p></li><li><p>rmdir：删除一个空的目录</p></li><li><p>cp: 复制文件或目录</p><p><code>-r</code> 递归复制（复制目录时推荐加上）</p><p><code>-a</code> 相当于<code>-dpR</code>，保留文件属性，递归复制</p></li><li><p>mv: 移动文件与目录，或修改文件与目录的名称</p></li><li><p>rm: 删除文件</p><p><code>-r</code> 可以删除目录</p></li><li><p><s>rmdir: 删除空目录</s></p></li><li><p>chmod -R 775 filename: 更改文件或者目录权限为 775</p><p><code>-R</code> 表示递归，可以同时修改文件夹及子文件夹和文件</p></li><li><p>chwon -R USER:GROUP filename: 更改文件或者目录的所有者和所属组</p><p><code>-R</code> 表示递归，可以同时修改文件夹及子文件夹和文件</p></li><li><p>chattr: 修改文件属性</p><p><code>+/-/=</code> 添加/删除/设定属性(忽略当前属性)</p><p><code>+i</code> 设置文件为只读</p><p><code>+a</code> 设置文件只能追加内容</p></li><li><p>curl: 用于传输数据</p><p><code>-I</code> 只显示响应头</p><p><code>-L</code> 跟踪重定向</p><p><code>-o</code> 将下载的内容保存到文件</p><p><code>-O</code> 将下载的内容保存到文件，文件名为 URL 的最后部分</p><p><code>-s</code> 静默模式</p><p><code>-v</code> 显示详细信息</p></li><li><p>ln: 创建链接文件（类似于 Windows 的快捷方式）</p><p><code>-s</code> 创建软链接（符号链接）</p><p><code>-n</code> 如果目标文件已存在，不覆盖（避免和 source 文件冲突用）</p><p><code>-f</code> 强制创建</p></li><li><p>history: 查看历史命令</p><p><code>-c</code> 清空历史命令</p><p><code>-d</code> 删除某个历史命令</p></li></ul><h3 id="文件相关" tabindex="-1">文件相关 <a class="header-anchor" href="#文件相关" aria-label="Permalink to &quot;文件相关&quot;">​</a></h3><ul><li><p>cat filename: 查看文件内容</p><p>less filename: 逐页查看文件内容(空格翻页，支持额外操作)</p><p>more filename: 逐页查看文件内容(空格翻页)</p><p>head filename: 查看文件头部内容</p><p>tail filename: 查看文件尾部内容</p></li><li><p>wc filename: 统计文件的行数、字数、字符数</p><p><code>-l</code> 只显示行数</p><p><code>-w</code> 只显示字数</p><p><code>-c</code> 只显示字符数</p></li><li><p>grep：查找文件内容</p><p>grep [选项] [搜索内容] [文件名]</p><p><code>-i</code> 忽略大小写</p><p><code>-n</code> 显示行号</p><p><code>-v</code> 反向选择</p><p><code>-r</code> 递归查找</p></li><li><p>find：查找文件</p><p>find [搜索范围] [搜索条件] [操作]</p><p>如：/etc -name &quot;passwd&quot; 查找 /etc 目录下的 passwd 文件</p><p><code>/</code> 表示搜索全部目录</p><p><code>.</code> 表示搜索当前目录</p><p><code>-name</code> 指定文件名（支持通配符<code>*</code>）</p><p><code>-iname</code> 忽略大小写</p><p><code>-type</code> 指定类型(f: 文件, d: 目录, l: 链接文件)</p><p><code>-user</code> 指定所有者</p><p><code>-group</code> 指定所属组</p><p><code>-size</code> 指定文件大小</p><p><code>-mtime</code> 指定修改时间</p><p><code>-exec</code> 执行操作</p><p><code>-print</code> 显示搜索结果</p></li><li><p>sort：排序文件内容</p><p>sort [选项] [文件名]</p><p><code>-r</code> 逆序</p><p><code>-n</code> 按数字排序</p><p><code>-k</code> 指定列排序</p></li></ul><h3 id="用户相关" tabindex="-1">用户相关 <a class="header-anchor" href="#用户相关" aria-label="Permalink to &quot;用户相关&quot;">​</a></h3><ul><li><p>id: 查看用户 ID 和所属组 ID</p><p><code>-u</code> 查看用户 ID，后面可以指定用户名</p><p><code>-g</code> 查看所属组 ID，后面可以指定用户名</p></li><li><p>who: 查看当前登录用户</p><p><code>-u</code> 显示详细信息</p></li><li><p>whoami: 查看当前用户</p></li><li><p>sudo -i: 提升用户权限</p></li><li><p>su: 切换用户</p><p><code>-l</code> 切换到 root 用户</p><p><code>-s</code> 指定 shell</p></li><li><p>useradd: 添加用户</p><p><code>-m</code> 创建用户的家目录</p><p><code>-e</code> 设置用户的过期时间</p></li><li><p>userdel: 删除用户</p><p><code>-r</code> 删除用户的家目录</p></li><li><p>usermod: 修改用户</p><p><code>-l</code> 修改用户名</p><p><code>-g</code> 修改用户所属组</p><p><code>-G</code> 修改用户所属附加组</p><p><code>-d</code> 修改用户家目录</p><p><code>-s</code> 修改用户 shell</p><p><code>-e</code> 修改用户过期时间</p></li><li><p>passwd: 修改密码</p></li><li><p>users: 查看当前登录系统的用户</p></li></ul><h3 id="系统运行状态" tabindex="-1">系统运行状态 <a class="header-anchor" href="#系统运行状态" aria-label="Permalink to &quot;系统运行状态&quot;">​</a></h3><ol><li><strong>查看系统信息</strong>： <ul><li><code>hostnamectl</code>: 显示系统的基本信息，包括主机名、操作系统、内核版本等。🌟🌟</li><li><code>uname -a</code>: 显示当前系统的内核版本和其他信息。</li><li><code>hostname</code>: 显示主机名。</li><li><code>uptime</code>: 显示系统的运行时间、用户数量、负载平均值等。</li><li><code>df -h</code>: 显示磁盘空间使用情况。</li></ul></li><li><strong>查看 CPU 运行情况</strong>： <ul><li><code>top</code>: 实时显示系统中各个进程的资源占用情况，包括 CPU 使用率、内存占用等。🌟🌟</li><li><code>htop</code>: 类似于 <code>top</code>，但是提供了更加友好的交互界面（推荐，<a href="https://www.shejibiji.com/archives/9635" target="_blank" rel="noreferrer">教程</a>）。</li><li><code>mpstat</code>: 显示多处理器系统中每个 CPU 的使用情况。</li><li><code>sar</code>: 收集、报告系统活动情况，包括 CPU 使用率、内存使用率等。</li></ul></li><li><strong>查看进程情况</strong>： <ul><li><code>ps</code>: 显示当前系统中的进程列表。 <ul><li><code>ps aux</code>: 显示所有进程的详细信息。🌟🌟</li><li><code>ps -ef</code>: 显示所有进程的详细信息，包括父进程 ID。</li></ul></li><li><code>pstree</code>: 显示进程树，以树状结构展示进程之间的关系。</li><li><code>pgrep</code>: 根据进程名或者其他条件查找进程 ID。</li><li><code>kill</code>: 终止指定进程。🌟🌟</li><li><code>killall</code>: 终止指定名称的所有进程。</li></ul></li><li><strong>查看内存使用情况</strong>： <ul><li><code>free</code>: 显示系统内存的空闲和已用情况。🌟🌟 <code>-m</code>： 以 MB 为单位显示内存使用情况。 <code>-g</code>： 以 GB 为单位显示内存使用情况。</li><li><code>vmstat</code>: 显示虚拟内存统计信息，包括内存、进程、IO 等。</li></ul></li><li><strong>查看网络情况</strong>： <ul><li><code>ifconfig</code>: 显示网络接口的配置信息。</li><li><code>netstat</code>: 显示网络连接、路由表、接口统计等。🌟🌟</li><li><code>ss</code>: 类似于 <code>netstat</code>，用于获取套接字统计信息。</li><li><code>nslookup</code>: 查询 DNS 服务器，获取域名对应的 IP 地址。</li></ul></li></ol><h3 id="cron-任务" tabindex="-1">Cron 任务 <a class="header-anchor" href="#cron-任务" aria-label="Permalink to &quot;Cron 任务&quot;">​</a></h3><ul><li><p>crontab: 定时任务</p><p><code>-e</code> 编辑定时任务</p><p><code>-l</code> 列出定时任务</p><p><code>-r</code> 删除定时任务</p><p><code>-u</code> 指定用户(可以列出指定用户的定时任务)</p><p><code>* * * * * command</code>：分别表示分钟、小时、日期、月份、星期，<code>*</code>表示任意时间</p></li></ul><h3 id="防火墙及端口" tabindex="-1">防火墙及端口 <a class="header-anchor" href="#防火墙及端口" aria-label="Permalink to &quot;防火墙及端口&quot;">​</a></h3><ul><li><p>firewall-cmd: 防火墙管理工具</p><p><code>--zone=public</code>：指定防火墙区域</p><p><code>--add-port=80/tcp</code>：添加端口</p><p><code>--permanent</code>：永久生效</p><p><code>--reload</code>：重新加载防火墙配置</p><p><code>--list-ports</code>：列出所有开放的端口</p></li></ul><h3 id="解压缩操作" tabindex="-1">解压缩操作 <a class="header-anchor" href="#解压缩操作" aria-label="Permalink to &quot;解压缩操作&quot;">​</a></h3><ul><li><p>tar: 打包文件</p><p><code>-c</code> 创建新的归档文件</p><p><code>-x</code> 解开归档文件</p><p><code>-v</code> 显示详细信息</p><p><code>-f</code> 指定归档文件</p><p><code>-z</code> 使用 gzip 压缩</p><p><code>-j</code> 使用 bzip2 压缩</p><p><code>-r</code> 向归档文件中添加文件</p><p><code>-t</code> 显示归档文件中的内容</p></li><li><p>zip: 压缩文件</p><p><code>-r</code> 递归压缩</p><p><code>-m</code> 移动文件到 zip 文件中</p><p><code>-q</code> 静默模式</p><p><code>-o</code> 覆盖已有文件</p><p><code>-u</code> 更新已有文件</p><p><code>-d</code> 删除 zip 文件中的文件</p><p><code>-l</code> 显示文件列表</p><p><code>-v</code> 显示详细信息</p><p><code>-T</code> 测试 zip 文件</p><p><code>-x</code> 排除文件</p></li><li><p>unzip: 解压缩文件</p></li></ul><h2 id="基础知识" tabindex="-1">基础知识 <a class="header-anchor" href="#基础知识" aria-label="Permalink to &quot;基础知识&quot;">​</a></h2><h3 id="你应该首先了解的" tabindex="-1">你应该首先了解的 <a class="header-anchor" href="#你应该首先了解的" aria-label="Permalink to &quot;你应该首先了解的&quot;">​</a></h3><p>1、文件名如果带空格，则需要通过双引号将文件名引起来（自己创建文件或目录时不推荐空格）。</p><p>例如：<code>rm “test case.py”</code></p><p>2、<code>.</code>表示当前目录，<code>..</code> 表示上一级目录，<code>/</code>开头的路径表示根目录，<code>~</code>为用户目录。</p><p>3、你可以使用 <em>man [命令]</em> 来查看各个命令的使用文档，</p><p>如 ：<code>man cp</code></p><p>如果你不是很确定命令的具体名称，可以使用 <em>apropos [关键字]</em> 来搜索相关的命令。 也支持参数 <code>-k</code> 来寻找相关性高的命令。</p><h3 id="文件目录" tabindex="-1">文件目录 <a class="header-anchor" href="#文件目录" aria-label="Permalink to &quot;文件目录&quot;">​</a></h3><ul><li><p>/etc：系统配置文件</p><p>通常包括系统的配置文件和程序的配置文件</p></li><li><p>/var：系统运行时需要改变的文件</p><p>通常包括日志文件、缓存文件、软件包文件等</p></li></ul><h3 id="bash-shell-中的变量" tabindex="-1">Bash shell 中的变量 <a class="header-anchor" href="#bash-shell-中的变量" aria-label="Permalink to &quot;Bash shell 中的变量&quot;">​</a></h3><p>在 Bash shell 中，变量是用来存储数据值的命名内存位置。这些变量可以存储各种类型的数据，如数字、文本字符串、文件名等。在 Bash 中，变量通常用于存储配置信息、运行脚本时的参数、临时数据等。</p><p><strong>环境变量</strong></p><p>Bash shell 包含一些预定义的环境变量，用于存储系统和用户环境的信息。以下是一些常用的环境变量：</p><ul><li><code>$HOME</code>：当前用户的主目录路径。</li><li><code>$PATH</code>：执行命令的搜索路径。当你输入一个命令时，系统会在这些路径下搜索可执行文件。</li><li><code>$PWD</code>：当前工作目录的路径。</li><li><code>$USER</code>：当前用户名。</li><li><code>$SHELL</code>：当前使用的 shell 的路径。</li><li><code>$TERM</code>：当前终端的类型。</li><li><code>$LANG</code>：当前语言环境设置。</li><li><code>$OSTYPE</code>：当前操作系统的类型。</li></ul><p>环境变量可以用<code>env</code>命令查看。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> less</span></span></code></pre></div><p><strong>定义变量</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">variable_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span></span></code></pre></div><p>这样设置的变量只在当前 shell 中有效，如果想要在其他 shell 中也生效，可以使用<code>export</code>命令。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> variable_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value</span></span></code></pre></div><p>如果你希望永远生效，可以将变量写入配置文件中，如<code>~/.bashrc</code>。</p><p><strong>特殊变量</strong></p><p>Bash shell 还提供了一些特殊的内置变量，例如：</p><ul><li><code>$0</code>：当前脚本的名称。</li><li><code>$1</code>、<code>$2</code>、<code>$3</code> 等：表示传递给脚本或函数的参数。</li><li><code>$#</code>：表示传递给脚本或函数的参数的个数。</li><li><code>$@</code>：表示传递给脚本或函数的所有参数的列表。</li><li><code>$?</code>：表示上一个命令的退出状态。</li></ul><p><strong>设置 path</strong></p><p>当您键入命令时，您的 PATH 变量定义 shell 将在哪些目录中查找您键入的命令。 它是一个以冒号分隔的目录列表，在 SPECTRE 上可能会很长，反映了您可能已加载的应用程序和程序模块的数量。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $PATH</span></span></code></pre></div><p>将会显示你的 PATH 变量的内容。</p><p>你可以继续在已经存在的 path 变量后添加新的：</p><blockquote><p>可以在一行上添加多个，只需要用“:”进行分隔开。</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/units174/bin</span></span></code></pre></div><p>如果要永久生效，在<code>.bashrc</code>后面添加：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:~/units174/bin</span></span></code></pre></div><p><strong>which</strong></p><p>which 命令可以显示命令的完整路径（前提是该文件位于该路径中）。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> command</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wget</span></span></code></pre></div><p>如果有多个同名的应用，可以加上参数<code>-a</code>来显示全部。</p><p>（同名的应用，只有列表中的第一个会生效）</p><h3 id="bash-的常用快捷方式" tabindex="-1">Bash 的常用快捷方式 <a class="header-anchor" href="#bash-的常用快捷方式" aria-label="Permalink to &quot;Bash 的常用快捷方式&quot;">​</a></h3><ul><li><p>Tab: 自动补全命令或者文件/目录名称</p></li><li><p>Ctrl + C: 终止当前命令</p></li><li><p>Ctrl + D: 退出当前 shell（比如 sort 进入读键盘操作后）</p></li><li><p>Ctrl + L: 清屏</p></li><li><p>Ctrl + W: 删除光标前的一个单词</p></li><li><p>Ctrl + U: 删除光标前的内容</p></li><li><p>Ctrl + K: 删除光标后的内容</p></li><li><p>Ctrl + Y: 粘贴删除的内容</p></li><li><p>Ctrl + A: 光标移动到行首</p></li><li><p>Ctrl + E: 光标移动到行尾</p></li><li><p>Ctrl + R: 搜索历史命令</p></li></ul><h3 id="系统启动需要加载的配置文件" tabindex="-1">系统启动需要加载的配置文件 <a class="header-anchor" href="#系统启动需要加载的配置文件" aria-label="Permalink to &quot;系统启动需要加载的配置文件&quot;">​</a></h3><blockquote><p>修改环境变量配置后，需要用 <code>source &lt;文件&gt;</code> 来重新加载配置使其生效</p></blockquote><p>/root/.bash_profile</p><p>/root/.bashrc</p><p>~/.bash_profile</p><p>~/.bashrc</p><p>/etc/profile</p><p>/etc/bashrc</p><p>/etc/rc.local（/etc/rc.d/rc.local）：开机启动文件，不推荐使用，可以加入服务</p><p>/etc/profile.d/*.sh：系统启动后自动执行的脚本文件夹</p><p>/etc/profile.d/lang.sh</p><p>/etc/sysconfig/i18n</p><h3 id="常用的网络应用目录" tabindex="-1">常用的网络应用目录 <a class="header-anchor" href="#常用的网络应用目录" aria-label="Permalink to &quot;常用的网络应用目录&quot;">​</a></h3><p>PHP 配置：/etc/php.ini</p><p>PHP-FPM 配置目录：/etc/php-fpm.d/</p><p>MySQL 配置：/etc/my.cnf</p><p>Nginx 配置：/etc/nginx/</p><p>Apache 配置目录： /etc/apache2/</p><p>Apache 默认网站目录：/var/www/html/</p><h3 id="️-权限相关的数字及字母" tabindex="-1">‼️ 权限相关的数字及字母 <a class="header-anchor" href="#️-权限相关的数字及字母" aria-label="Permalink to &quot;‼️ 权限相关的数字及字母&quot;">​</a></h3><p>如：<code>chmod 755 filename</code>，其中 755 代表文件的权限，分别代表所有者、所属组、其他用户的权限，7 代表读写执行，5 代表读和执行，0 代表无权限；</p><p>也可以使用类似<code>ug=rwx, o=rw</code>的方式来修改权限。</p><p>比如：<code>chmod u=rwx, g=rw, o=rw filename</code></p><p>也可以用类似<code>+x</code>来增加权限，</p><p>比如：<code>chmod +x filename</code></p><p>下面是所有符号的含义：</p><ul><li><p><code>+</code>：添加权限</p></li><li><p><code>-</code>：删除权限</p></li><li><p><code>=</code>：设置权限</p></li><li><p><code>r</code>：读权限</p></li><li><p><code>w</code>：写权限</p></li><li><p><code>x</code>：执行权限</p></li><li><p><code>u</code>：所有者</p></li><li><p><code>g</code>：所属组</p></li><li><p><code>o</code>：其他用户</p></li><li><p><code>a</code>：所有用户</p></li></ul><h3 id="service-和-systemctl-的区别" tabindex="-1">service 和 systemctl 的区别 <a class="header-anchor" href="#service-和-systemctl-的区别" aria-label="Permalink to &quot;service 和 systemctl 的区别&quot;">​</a></h3><p><code>systemctl</code> 和 <code>service</code> 命令都用于管理系统服务，包括启动、停止、重启和检查服务状态等。它们的不同之处在于它们是不同的服务管理工具，适用于不同的系统。</p><ul><li><p><code>systemctl</code> 是 systemd 的主要命令，用于管理系统的服务和其他系统资源。</p></li><li><p><code>systemctl</code> 可以启动、停止、重启和重新加载系统服务，并提供了更多高级功能，如启用/禁用服务、查看服务状态和日志等。</p></li><li><p><code>service</code> 命令是一个简单的系统服务管理工具，用于启动、停止和重启系统服务。</p></li><li><p><code>service</code> 命令主要用于 SysVinit 系统，这是旧版本的 Linux 系统使用的 init 系统。</p></li></ul><p>虽然在一些新的 Linux 发行版中，<code>systemctl</code> 取代了 <code>service</code> 命令成为了管理系统服务的首选工具，但在一些较旧的系统中，<code>service</code> 命令仍然可以使用，因为系统可能仍然使用着 SysVinit 系统。</p><h3 id="ls-l-长目录结果代表的意思" tabindex="-1">ls -l 长目录结果代表的意思 <a class="header-anchor" href="#ls-l-长目录结果代表的意思" aria-label="Permalink to &quot;ls -l 长目录结果代表的意思&quot;">​</a></h3><p>下面是 <code>ls -l</code> 命令输出的示例：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> group</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> May</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drwxr-xr-x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> group</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> May</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 09:59</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span></span></code></pre></div><p>现在让我们逐个解释每列的含义：</p><ol><li>第一列：文件权限和文件类型 <ul><li>第一个字符： <ul><li><code>-</code> 表示这是一个普通文件。</li><li><code>d</code> 表示这是一个目录。</li><li><code>l</code> 表示这是一个符号链接。</li><li><code>c</code> 表示这是一个字符设备文件。</li><li><code>b</code> 表示这是一个块设备文件。</li><li><code>s</code> 表示这是一个套接字文件。</li><li><code>p</code> 表示这是一个命名管道。</li></ul></li><li>后续的九个字符（每三个一组）表示文件的权限，分别代表了文件所有者、文件所属组和其他用户的读、写和执行权限。</li></ul></li><li>第二列：硬链接数 <ul><li>表示指向此文件或目录的硬链接的数量。</li></ul></li><li>第三列：文件所有者 <ul><li>表示此文件或目录的所有者。</li></ul></li><li>第四列：文件所属组 <ul><li>表示此文件或目录所属的组。</li></ul></li><li>第五列：文件大小（以字节为单位） <ul><li>对于目录来说，这个字段一般没有实际意义，因为目录大小并不代表其中包含的文件大小总和。</li></ul></li><li>第六列至第八列：最后修改的日期和时间 <ul><li>表示文件或目录最后一次修改的日期和时间。</li></ul></li><li>最后一列：文件或目录的名称</li></ol><h2 id="使用案例" tabindex="-1">使用案例 <a class="header-anchor" href="#使用案例" aria-label="Permalink to &quot;使用案例&quot;">​</a></h2><h3 id="文件相关-1" tabindex="-1">文件相关 <a class="header-anchor" href="#文件相关-1" aria-label="Permalink to &quot;文件相关&quot;">​</a></h3><h4 id="使用-du-查看文件大小" tabindex="-1">使用 du 查看文件大小 <a class="header-anchor" href="#使用-du-查看文件大小" aria-label="Permalink to &quot;使用 du 查看文件大小&quot;">​</a></h4><ul><li><p>du: 查看所占磁盘空间</p><p><code>-h</code> 人性化显示文件大小</p><p><code>-d</code> 指定显示目录深度</p><p><code>-s</code> 只显示总大小</p><p><code>-a</code> 显示所有文件大小</p><p><code>-c</code> 显示总大小</p></li></ul><p><strong>使用案例</strong></p><ul><li><p><code>du -h *</code>：查看当前目录下所有文件的大小</p></li><li><p><code>du -sh *</code>：查看当前目录下所有文件的总大小</p></li><li><p><code>du -h -d 1 | sort -n</code>：查看当前目录下一级目录的大小并排序</p></li></ul><h4 id="使用-cat-合并追加文件" tabindex="-1">使用 cat 合并追加文件 <a class="header-anchor" href="#使用-cat-合并追加文件" aria-label="Permalink to &quot;使用 cat 合并追加文件&quot;">​</a></h4><p>cat file1 file2 &gt; target_file：将多个文件合并到目标文件中。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target_file</span></span></code></pre></div><p>cat file1 file2 &gt;&gt; target_file：将几个文件附加到目标文件中。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target_file</span></span></code></pre></div><h4 id="快速创建多个文件或者目录" tabindex="-1">快速创建多个文件或者目录 <a class="header-anchor" href="#快速创建多个文件或者目录" aria-label="Permalink to &quot;快速创建多个文件或者目录&quot;">​</a></h4><p>可以使用<code>{1,2,3}</code>这种方式来创建多个文件或者目录</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> newDir{1,2,3}</span></span></code></pre></div><p>如果想创建多个层级的目录，可以使用<code>-p</code>参数</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> newDir/{subDir1,subDir2}</span></span></code></pre></div><h4 id="快速统计目录内文件个数" tabindex="-1">快速统计目录内文件个数 <a class="header-anchor" href="#快速统计目录内文件个数" aria-label="Permalink to &quot;快速统计目录内文件个数&quot;">​</a></h4><p>可以先列出目录下的所有文件和子目录，并且通过<code>grep</code>命令筛选出文件行（以<code>-</code>开头），最后使用<code>wc -l</code>命令统计行数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;^-&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre></div><h4 id="less-查看文件支持更多操作" tabindex="-1">less 查看文件支持更多操作 <a class="header-anchor" href="#less-查看文件支持更多操作" aria-label="Permalink to &quot;less 查看文件支持更多操作&quot;">​</a></h4><ol><li><strong>搜索</strong>： <ul><li>按下 <code>/</code> 键后输入要搜索的内容，然后按 Enter 键。<code>less</code> 将高亮显示匹配的内容，并使用 <code>n</code> 和 <code>N</code> 键分别向前和向后跳转到下一个或上一个匹配项。</li></ul></li><li><strong>跳转</strong>： <ul><li>使用 <code>g</code> 命令跳转到文件的开头。</li><li>使用 <code>G</code> 命令跳转到文件的末尾。</li><li>使用 <code>1G</code> 命令跳转到文件的第一行。</li><li>使用 <code>n&lt;Enter&gt;</code> 命令跳转到文件的第 n 行。</li></ul></li><li><strong>标记位置</strong>： <ul><li>按下 <code>m</code> 键后输入一个字母（比如 <code>a</code>）以在当前位置标记。然后，可以使用 <code>&#39;a</code> 命令回到该标记位置。</li></ul></li><li><strong>显示行号</strong>： <ul><li>按下 <code>-N</code>（大写 N）命令可以显示行号。</li></ul></li><li><strong>执行外部命令</strong>： <ul><li>按下 <code>!</code> 键后输入要执行的外部命令，然后按 Enter 键。例如，<code>!ls</code> 可以执行 <code>ls</code> 命令并显示结果。</li></ul></li><li><strong>切换布局</strong>： <ul><li>按下 <code>v</code> 键可以切换到编辑器模式，以便在 <code>vi</code> 或其他编辑器中编辑当前文件。</li></ul></li><li><strong>退出</strong>： <ul><li>按下 <code>q</code> 键退出 <code>less</code>。</li></ul></li></ol><h4 id="使用-grep-查找文本" tabindex="-1">使用 grep 查找文本 <a class="header-anchor" href="#使用-grep-查找文本" aria-label="Permalink to &quot;使用 grep 查找文本&quot;">​</a></h4><p>查找文本在某个文件中</p><p>可以加<code>-a</code>参数，表示以文本方式查看二进制文件</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;text&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filename</span></span></code></pre></div><p>其中字符串内容可以使用正则表达式</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sc[0-9]*&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filename</span></span></code></pre></div><h4 id="查找文件" tabindex="-1">查找文件 <a class="header-anchor" href="#查找文件" aria-label="Permalink to &quot;查找文件&quot;">​</a></h4><p><strong>查找文件/文件夹并进行排序</strong></p><p>可以结合<code>find</code>和<code>sort</code>实现</p><ul><li>通过文件名查找文件并按照名称排序</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;*.service&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -maxdepth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span></span></code></pre></div><ul><li>查找文件并按照文件大小排序</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 5n</span></span></code></pre></div><p>这个命令会先使用 <code>find</code> 命令找到所有文件，然后通过 <code>ls -l</code> 命令获取它们的详细信息，并通过管道将结果传递给 <code>sort</code> 命令。<code>sort -k 5n</code> 会按照第五列（文件大小）进行数字排序。</p><p>你也可以直接在 <code>find</code> 命令中使用 <code>-exec</code> 选项和 <code>-printf</code> 来获取文件的大小信息，然后再排序。例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;%s %p\\n&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span></span></code></pre></div><p><strong>locate</strong></p><p>它是直接从预先构建好的数据库中进行搜索，而不是像 <code>find</code> 命令一样实时遍历文件系统，可以实现更快搜索。</p><blockquote><p>安装：yum install mlocate</p></blockquote><ul><li><code>updatedb</code>：更新文件及目录索引数据库（第一次使用可能需要执行这条命令）</li></ul><p>之后就可以使用<code>locate</code>命令来查找文件了。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">locate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filename</span></span></code></pre></div><h4 id="远程复制文件到本地" tabindex="-1">远程复制文件到本地 <a class="header-anchor" href="#远程复制文件到本地" aria-label="Permalink to &quot;远程复制文件到本地&quot;">​</a></h4><p>适用于复制远程备份文件到本地保存</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -P</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2347</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apollo@87.143.145.146:/home/apollo/bak/20240202</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  /Users/ethan/Downloads</span></span></code></pre></div><h3 id="应用管理" tabindex="-1">应用管理 <a class="header-anchor" href="#应用管理" aria-label="Permalink to &quot;应用管理&quot;">​</a></h3><h4 id="yum-管理工具的使用" tabindex="-1">yum 管理工具的使用 <a class="header-anchor" href="#yum-管理工具的使用" aria-label="Permalink to &quot;yum 管理工具的使用&quot;">​</a></h4><p>查看所有软件列表：yum repolist all | grep mysql</p><p>查看已安装的软件列表：yum list installed</p><p>卸载应用：<code>yum remove [package_name]</code></p><p>深度卸载：<code>yum autoremove [package_name]</code></p><p>清除缓存：<code>yum clean all</code></p><p>重新生成缓存：<code>yum makecache</code>（更换源后需要执行）</p><h3 id="服务管理" tabindex="-1">服务管理 <a class="header-anchor" href="#服务管理" aria-label="Permalink to &quot;服务管理&quot;">​</a></h3><h4 id="使用-ln-命令为服务创建快捷方式" tabindex="-1">使用 ln 命令为服务创建快捷方式 <a class="header-anchor" href="#使用-ln-命令为服务创建快捷方式" aria-label="Permalink to &quot;使用 ln 命令为服务创建快捷方式&quot;">​</a></h4><p>例如：<code>ln -s /usr/local/nginx/sbin/nginx /usr/bin/nginx</code>，则可以通过<code>nginx</code>命令启动 Nginx 服务</p><h4 id="使用-systemctl-命令管理服务" tabindex="-1">使用 systemctl 命令管理服务 <a class="header-anchor" href="#使用-systemctl-命令管理服务" aria-label="Permalink to &quot;使用 systemctl 命令管理服务&quot;">​</a></h4><p>systemd 是一个 init 系统和系统管理守护进程，用于启动、停止和管理系统中的各种服务和进程。</p><p><code>systemctl</code> 是一个 Linux 系统中用于管理 systemd 服务的命令行工具。</p><blockquote><p>对应的服务目录：/usr/lib/systemd/system/*.service</p></blockquote><p>以下是 <code>systemctl</code> 命令的一些常见用法和解释：</p><ol><li><p><strong>启动服务</strong>：启动一个特定的服务。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p><strong>停止服务</strong>：停止一个特定的服务。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p><strong>重启服务</strong>：停止并重新启动一个特定的服务。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p><strong>重新加载配置</strong>：重新加载一个特定服务的配置文件，使新的配置生效，而不需要重启服务。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p><strong>查看服务状态</strong>：查看特定服务的状态，包括是否正在运行。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p><strong>启用服务</strong>：将一个服务设置为在系统启动时自动启动。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p><strong>禁用服务</strong>：将一个服务设置为在系统启动时不自动启动。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p><strong>查看服务是否启用</strong>：查看一个服务是否已经设置为在系统启动时自动启动。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is-enabled</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p><strong>查看所有已启用的服务</strong>：列出所有已经设置为在系统启动时自动启动的服务。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list-unit-files</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type=service</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enabled</span></span></code></pre></div></li><li><p><strong>查看所有正在运行的服务</strong>：列出当前正在运行的所有服务。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list-units</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type=service</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> running</span></span></code></pre></div></li></ol><p>以下是一些常用的 Web 服务已经它对应的服务名称</p><ul><li><p>Nginx：nginx</p></li><li><p>Apache：httpd/apache2</p></li><li><p>MySQL：mysqld</p></li><li><p>PHP-FPM：php-fpm</p></li><li><p>Redis：redis</p></li><li><p>Memcached：memcached</p></li></ul><h4 id="使用-cron-定时任务" tabindex="-1">使用 Cron 定时任务 <a class="header-anchor" href="#使用-cron-定时任务" aria-label="Permalink to &quot;使用 Cron 定时任务&quot;">​</a></h4><p>Cron 是一个用于在固定时间、日期或者间隔时间执行命令或者脚本的工具。 Cron 任务可以用于定期备份文件、清理日志、定时运行脚本等。</p><p>Cron 任务的配置文件通常位于 <code>/etc/crontab</code> 或者 <code>/var/spool/cron</code> 目录中。</p><p>以下是一些常见的 Cron 任务的配置示例：</p><ol><li><p><strong>每天凌晨 3 点执行备份脚本</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/backup.sh</span></span></code></pre></div></li><li><p><strong>每 3 小时执行一次脚本</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/script.sh</span></span></code></pre></div></li><li><p><strong>每周一凌晨 2 点执行清理日志脚本</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/clean_logs.sh</span></span></code></pre></div></li><li><p><strong>每隔 30 分钟执行一次脚本</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/30 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /path/to/script.sh</span></span></code></pre></div></li><li><p><strong>每小时执行一次脚本</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/script.sh</span></span></code></pre></div></li><li><p><strong>每月 1 号凌晨 1 点执行脚本</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/script.sh</span></span></code></pre></div></li><li><p><strong>使用@reboot 标记在系统启动时执行脚本</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@reboot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/script.sh</span></span></code></pre></div></li><li><p><strong>使用@daily 标记每天执行脚本</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@daily</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/script.sh</span></span></code></pre></div></li></ol><h3 id="网络相关" tabindex="-1">网络相关 <a class="header-anchor" href="#网络相关" aria-label="Permalink to &quot;网络相关&quot;">​</a></h3><h4 id="使用-curl-下载文件" tabindex="-1">使用 cURL 下载文件 <a class="header-anchor" href="#使用-curl-下载文件" aria-label="Permalink to &quot;使用 cURL 下载文件&quot;">​</a></h4><p>cURL 是一个用于传输数据的命令行工具，支持多种协议，如 HTTP、HTTPS、FTP 等。</p><p>下面是使用 cURL 下载文件的一些常见用法：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -SOJL</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;License: license_key&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://chevereto.com/api/download/latest</span></span></code></pre></div><p><code>-f</code> 参数表示如果下载失败，则不创建文件。</p><p><code>-S</code> 参数表示显示错误信息。</p><p><code>-O</code> 参数表示将下载的文件保存到本地，并使用远程文件的文件名。</p><p><code>-J</code> 参数表示使用远程文件的文件名。</p><p><code>-L</code> 参数表示跟踪重定向。</p><p><code>-H</code> 参数表示添加请求头。</p><h4 id="测试服务器是否可以连接某网站" tabindex="-1">测试服务器是否可以连接某网站 <a class="header-anchor" href="#测试服务器是否可以连接某网站" aria-label="Permalink to &quot;测试服务器是否可以连接某网站&quot;">​</a></h4><p>可以通过自带的连接工具，比如 curl 或者 wget。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://site.com</span></span></code></pre></div><p>或者</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> curl -I http://yourpage.com </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HTTP</span></span></code></pre></div><p>例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">os@osdeMacBook-Pro</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://www.shejibiji.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HTTPS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  %</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Total</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    %</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Received</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Xferd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Average</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Speed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   Time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    Time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     Time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Current</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                                 Dload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Upload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   Total</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   Spent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    Left</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Speed</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --:--:--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --:--:--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --:--:--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://www.shejibiji.com</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  0.02s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.01s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 4%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cpu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.617</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> total</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HTTPS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  0.00s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.00s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cpu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.616</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> total</span></span></code></pre></div><h4 id="查看-tcp-连接数" tabindex="-1">查看 TCP 连接数 <a class="header-anchor" href="#查看-tcp-连接数" aria-label="Permalink to &quot;查看 TCP 连接数&quot;">​</a></h4><p>1）统计 80 端口连接数</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;80&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre></div><p>2）统计 httpd 协议连接数</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> httpd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre></div><p>3）统计已连接上的，状态为“established</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -na</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ESTABLISHED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre></div><p>4）查出哪个 IP 地址连接最多</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分析当前系统上的网络连接情况，并统计每个来源 IP 地址的连接数量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ntu</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $5}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cut</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按照连接次数从高到低进行排序，显示出每个 IP 地址建立的连接数量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -na</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ESTABLISHED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $5}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -F:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $1}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span></span></code></pre></div><p><code>netstat -ntu</code>：这个部分执行了 netstat 命令来显示当前系统的网络连接情况。其中 <code>-n</code> 参数表示以数字形式显示 IP 地址和端口号，<code>-t</code> 参数表示显示 TCP 协议的连接，<code>-u</code> 参数表示显示 UDP 协议的连接。</p><p>5）显示所有监听的 TCP 端口</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ntlp</span></span></code></pre></div><p>6）显示特定端口的监听状态：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ntlp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 80</span></span></code></pre></div><p>7）显示所有活动的 UNIX 域套接字：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -axu</span></span></code></pre></div><p>8）统计 TCP 连接状态的类型和数量：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/^tcp/ {++S[$NF]} END {for (a in S) print a, S[a]}&#39;</span></span></code></pre></div><p>9）显示连接的进程 ID 和程序名称：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -natp</span></span></code></pre></div><p>10）显示路由表</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nr</span></span></code></pre></div><h3 id="进程管理" tabindex="-1">进程管理 <a class="header-anchor" href="#进程管理" aria-label="Permalink to &quot;进程管理&quot;">​</a></h3><h4 id="使用-ps-查找进程" tabindex="-1">使用 PS 查找进程 <a class="header-anchor" href="#使用-ps-查找进程" aria-label="Permalink to &quot;使用 PS 查找进程&quot;">​</a></h4><ul><li><p><code>ps aux</code>：查看所有进程</p></li><li><p><code>ps aux|grep nginx</code>：查找 nginx 进程</p></li><li><p><code>ps aux|grep php-fpm</code>：查找 php-fpm 进程</p><p>还可以使用<code>lsof -i :port</code>来查看指定端口的进程情况（可能需要安装 lsof）。</p></li></ul><h4 id="使用-kill-关闭进程" tabindex="-1">使用 kill 关闭进程 <a class="header-anchor" href="#使用-kill-关闭进程" aria-label="Permalink to &quot;使用 kill 关闭进程&quot;">​</a></h4><ul><li><p><code>kill -9 PID</code>：关闭指定 PID 的进程</p></li><li><p><code>killall -9 nginx</code>：关闭所有 nginx 进程</p><p><code>-9</code> 表示强制关闭进程（不进行清理操作）</p><p>kill 后面可以跟多个进程 ID，用空格隔开</p></li></ul><h3 id="防火墙" tabindex="-1">防火墙 <a class="header-anchor" href="#防火墙" aria-label="Permalink to &quot;防火墙&quot;">​</a></h3><h4 id="使用-ufw-管理防火墙" tabindex="-1">使用 ufw 管理防火墙 <a class="header-anchor" href="#使用-ufw-管理防火墙" aria-label="Permalink to &quot;使用 ufw 管理防火墙&quot;">​</a></h4><blockquote><p>如果没有就先安装在 ufw</p></blockquote><p><strong>基础命令</strong></p><ul><li><p>ufw status verbose: 查看当前防火墙状态</p></li><li><p>ufw app list 查看服务列表</p></li><li><p>ufw status [numbered]: 列出防火墙规则（可以选择加上序号）</p></li><li><p>ufw delete {num}: 有序号后就可以指定删除某条规则</p></li></ul><p><strong>常用案例</strong></p><p>允许 22 端口的 TCP 请求访问（不加“/tcp”为允许 tcp 和 udp）</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ufw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> allow</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 22/tcp</span></span></code></pre></div><p>拒绝指定端口访问</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># []表示可选项</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ufw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deny</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 25[/tcp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> comment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Block access to smptd by default&#39;]</span></span></code></pre></div><p><strong>更多案例</strong></p><p>To allow IP address 192.168.1.10 access to port 22 for all protocols <code>sudo ufw allow from 192.168.1.10 to any port 22</code> Open port 74.86.26.69:443 (SSL 443 nginx/apache/lighttpd server) for all, enter: <code>sudo ufw allow from any to 74.86.26.69 port 443 proto tcp</code> To allows subnet 192.168.1.0/24 to Sabma services, enter: <code>ufw allow from 192.168.1.0/24 to any app Samba</code></p><p>To get information on Squid profile/app, run: <code>ufw app info Squid</code></p><h3 id="主机相关" tabindex="-1">主机相关 <a class="header-anchor" href="#主机相关" aria-label="Permalink to &quot;主机相关&quot;">​</a></h3><h4 id="查看及修改主机信息" tabindex="-1">查看及修改主机信息 <a class="header-anchor" href="#查看及修改主机信息" aria-label="Permalink to &quot;查看及修改主机信息&quot;">​</a></h4><blockquote><p>主机的名称是服务器的标识，可以通过主机名来访问服务器，配置文件在 /etc/hostname</p></blockquote><ul><li><p><code>hostname</code>：查看主机名</p></li><li><p><code>hostname newname</code>：修改主机名（临时）</p></li><li><p><code>hostnamectl set-hostname newname</code>：修改主机名</p></li><li><p><code>hostnamectl set-hostname newname --static</code>：修改静态主机名</p></li><li><p><code>hostnamectl set-hostname newname --pretty</code>：修改主机名的美观名称</p></li><li><p><code>hostnamectl set-hostname newname --transient</code>：修改临时主机名</p></li></ul>`,225),t=[p];function h(n,d,o,k,c,r){return a(),i("div",null,t)}const u=s(l,[["render",h]]);export{F as __pageData,u as default};
